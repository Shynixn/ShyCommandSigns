{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ShyCommandSigns","text":"<p>ShyCommandSigns is a plugin to make signs execute commands on click for Bukkit and Folia based Minecraft server.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Create multiple clickable signs, which can execute arbitrary commands</li> <li>Bukkit and Folia compatible</li> <li>PlaceHolderApi support</li> <li>Runs asynchronously</li> <li>Version support 1.8.R3 - 1.21.R4</li> </ul>"},{"location":"commands/","title":"Commands","text":"<p>The following commands are available in ShyCommandSigns. You can access them by typing:</p> <pre><code>/shycommandsigns help 1\n</code></pre>"},{"location":"commands/#shycommandsigns-add","title":"/shycommandsigns add","text":"<pre><code>/shycommandsigns add &lt;sign&gt; [tagkey] [tagvalue]\n</code></pre> <p>Adds a new sign request for the given player. After a player has right-clicked on a placed sign, this sign will be added to the list of locations. Tags can be used for sign placeholders per location.  e.g. a tag key of <code>game</code> and tag value <code>cool game</code> can be used in the <code>lines</code> and <code>commands</code> properties via the placeholder <code>$game$</code>. e.g. a tag key of <code>mynumber</code> and tag value <code>5</code> can be used in the <code>lines</code> and <code>commands</code> properties via the placeholder <code>$mynumber$</code>.</p> <p>Note: Signs can be removed by simply destroying the sign block.</p>"},{"location":"commands/#shycommandsigns-reload","title":"/shycommandsigns reload","text":"<pre><code>/shycommandsigns reload\n</code></pre> <p>Reloads all configurations and signs.</p>"},{"location":"installation/","title":"How to create a new sign","text":"<p>In ShyCommandSigns you have to configure a <code>sign file</code> first, where you configure the lines of a sign (including PlaceHolderApi compatible placeholders) and commands which are executed on click.</p> <p>After you have configured a <code>sign file</code>, you can use the <code>/shycommandsigns add &lt;yourSignFileName&gt;</code> to request placing the sign. The next step is to perform a right-click on an existing sign block to apply your <code>sign file</code>. You can add multiple placed signs to a single <code>sign file</code>.</p> <p>A detailed description can be found below.</p>"},{"location":"installation/#creating-a-basic-sign","title":"Creating a basic sign","text":""},{"location":"installation/#managing-files","title":"Managing files","text":"<ol> <li>Open the <code>/plugins/ShyCommandSigns/sign</code> folder.</li> <li>Copy the <code>sample_sign.yml</code> to a new file in the same folder and name it <code>my_sign.yml</code>.</li> <li>Open <code>my_sign.yml</code> and set the <code>name</code> to <code>my_sign</code></li> <li>Set the <code>lines</code> to text, chat colors (including HTML color) or PlaceHolderApi compatible placeholders.</li> <li>Set the commands, which should get executed on click. If you do not want commands to be executed on a certain type of click just set it to <code>[]</code>. e.g. <code>leftClickCommands: []</code></li> <li>Define how often this sign is refreshed. It is only refreshed, if the chunk, where the sign is placed, is currently loaded on your server.</li> <li>Save the file.</li> </ol>"},{"location":"installation/#ingame","title":"InGame","text":"<ol> <li>Execute the <code>/shycommandsigns reload</code> command</li> <li>Execute the <code>/shycommandsigns add my_sign</code> command</li> <li>Place a sign block anywhere</li> <li>Right-click on this sign block. The sign will be added to the list of locations in your <code>sign file</code>.</li> <li>Repeat step 2-4 until you have placed all signs of the <code>sign file</code> on your server.</li> <li>You can destroy a sign by simply destroying the sign block.</li> </ol>"},{"location":"installation/#creating-an-advanced-sign","title":"Creating an advanced sign","text":"<p>ShyCommandSigns can be used to create MiniGame signs for all kinds of MiniGame plugins. They only have to provide a <code>join</code> command and optionally PlaceHolderApi placeholders.</p> <p>Assume the following situation:</p> <ul> <li>You have got multiple arenas of a MiniGame plugin</li> <li>You want to design a join sign for all of those arenas </li> <li>You do not want to create a new <code>sign file</code> per arena because they should all look the same</li> </ul> <p>Here, the sign tagging feature of ShyCommandSigns can be used. </p>"},{"location":"installation/#managing-files_1","title":"Managing files","text":"<ul> <li>Open the <code>/plugins/ShyCommandSigns/sign</code> folder.</li> <li>Copy the <code>sample_sign.yml</code> to a new file in the same folder and name it <code>blockball_join_sign.yml</code>.</li> <li>Open <code>blockball_join_sign.yml</code> and set the <code>name</code> to <code>blockball_join_sign</code></li> <li>Set the text of the <code>lines</code> and <code>clickCommands</code>.</li> </ul> <pre><code>lines:\n- 'BlockBall'\n- '&amp;aJoin'\n- '%blockball_game_players_game1%/%blockball_game_maxPlayers_game1%'\n- ''\nclickCommands: []\nleftClickCommands: []\nrightClickCommands:\n- type: PER_PLAYER\n  command: \"/blockball join game1\"\n  cooldown: 0\n  delay: 0\n</code></pre> <ul> <li>You can see that those lines and commands directly reference the arena <code>game1</code> of BlockBall. </li> <li>However, we can change it that the lines and commands reference a tag <code>$arena$</code> instead of <code>game1</code>. This allows to use the same <code>sign file</code> for multiple arenas.</li> <li>A tag always starts with <code>$</code> and ends with <code>$</code>.</li> </ul> <pre><code>lines:\n- 'BlockBall'\n- '&amp;aJoin'\n- '%blockball_game_players_$arena$%/%blockball_game_maxPlayers_$arena$%'\n- ''\nclickCommands: []\nleftClickCommands: []\nrightClickCommands:\n- type: PER_PLAYER\n  command: \"/blockball join $arena$\"\n  cooldown: 0\n  delay: 0\n</code></pre>"},{"location":"installation/#ingame_1","title":"InGame","text":"<ul> <li>Execute the <code>/shycommandsigns reload</code> command</li> <li>Execute the <code>/shycommandsigns add blockball_join arena game1</code> command. This creates a join sign for arena named <code>game1</code>.</li> <li>Place a sign block anywhere and right-click on this sign block. The sign will be added to the list of locations in your <code>sign file</code>.</li> <li>Execute the <code>/shycommandsigns add blockball_join arena coolArena</code> command. This creates a join sign for arena named <code>coolArena</code>.</li> <li>Place a sign block anywhere and right-click on this sign block. The sign will be added to the list of locations in your <code>sign file</code>.</li> </ul>"},{"location":"permission/","title":"Permission","text":"<p>The following permissions are available in ShyCommandSigns.</p>"},{"location":"permission/#levels","title":"Levels","text":"<ul> <li>User: A permission all players can have.</li> <li>Admin: A permission only admins should have.</li> </ul> Permission Level Description shycommandsigns.command Admin Allows to use the /shycommandsigns command. shycommandsigns.reload Admin Allows to reload configurations. shycommandsigns.add Admin Allows to add a sign"}]}